"0","allelic.freq <- function(df) {"
"0","  L=ncol(df)   #how many columns are there?"
"0","  locus_positions=(2*(unique(round((1:(L-2))/2)))+1)   #find the starting column number for each locus"
"0","  lnames=colnames(df)                          #locus names, from the header"
"0","  OUT=list()        #create a null dataset to append allele freqs to"
"0","  "
"0","  for (x in locus_positions) {                       #begin for loop, to calculate frequencies for each locus"
"0","    alleles=c(df[,x],df[,x+1])        #For example, combine columns 1 and 2 for locus 1 (two columns because they are diploid)"
"0","    alleles2=as.data.frame(table(alleles))             #count each allele at locus x"
"0","    missing=alleles2[which(alleles2[,1]==0),2]          #count missing data at locus x, entered as '0' in this dataset (not used further for simplicity)"
"0","    alleles3=alleles2[which(!alleles2[,1]==0),]          #remove missing data (otherwise 0 would be counted in total number of alleles)"
"0","    alleles4=cbind(alleles3,alleles3[,2]/sum(alleles3[,2])) #calculate frequencies"
"0","    output=cbind(x,lnames[x],alleles4)                        #combine x, locusname, and frequencies"
"0","    OUT[[x]] <- output"
"0","  }  "
"0","  OUT.1 <- do.call(rbind, OUT)"
"0","  colnames(OUT.1) <- c(""Number"",""Locus"",""allele"",""count"",""frequency"") #add column headers"
"0","  return(OUT.1)"
"0","}"
